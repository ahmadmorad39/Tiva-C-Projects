/*
 * bsp.h
 *
 *  Created on: Oct 26, 2024
 *      Author: ahmad
 */

#ifndef BSP_H_
#define BSP_H_

// ================================= Header files ====================================
#include "inc/tm4c123gh6pm.h"
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"
#include "driverlib/timer.h"
#include "driverlib/interrupt.h"
#include "driverlib/adc.h"
#include "driverlib/uart.h"
#include "driverlib/flash.h"   // For FlashErase and FlashProgram
#include "utils/uartstdio.h"
#include "tm4c_cmsis.h"
#include "driverlib/pin_map.h"    // For pin mappings (like GPIO_PA0_U0RX)
#include "inc/hw_gpio.h"
#include "driverlib/pwm.h"
// ================================= variable =========================================
extern uint32_t ADC_vals[4];
extern unsigned char X_cord[10];
extern unsigned char Y_cord[10];
extern unsigned sec_count;
extern unsigned msec_count;
extern unsigned sec_len;
extern unsigned msec_len;

// ================================= Macro ===========================================
#define   debounceVal  2000

// ================================= Function prototypes ===========================================
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void GPIOconfig(void);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void stop_Timers(void);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void start_TIMERA0_0(void);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void start_TIMERA1();
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void stoptimer_A1_0(void);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void change_TA0CCR0(unsigned int);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void start_stepper(void);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void start_ADC(void);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void stop_ADC(void);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void sample_convert(void);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void set_led(uint8_t val);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void set_rgb(uint8_t val);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void DelayMs(unsigned int);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void DelayUs(unsigned int);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void PortF_INT_Config(void);
/**
 * *************************************************************************************************
 * @brief
 * @param
 * @return
 * *************************************************************************************************
 */
extern void PortF_INT_Handler(void);

#endif /* BSP_H_ */
